class login{constructor(i,t){this._email=i,this._pwd=t}}class loginHandler{constructor(i,t){if(this._email=i,this._pwd=t,!regexEmail.test(this._email)||!regexPassword.test(this._pwd))throw Error("login credentials failed.");loginListArray.addLogin(new login(this._email,this._pwd))}}function simpleEncryption(i){let t="";for(let r=0;r<i.length;r++)t+=i.charCodeAt(r).toString(16);return t}function simpleDecryption(i){let t="";for(let r=0;r<i.length;r+=2){let s=i.charAt(r)+i.charAt(r+1);t+=String.fromCharCode(parseInt(s,16))}return t}class loginList{constructor(){this._loginList=[new login("admin","admin")],this._arrayEmail=["admin"],this._arrayPWD=["admin"]}updateLogin(){this._arrayEmail=[],this._arrayPWD=[];for(let i=0;i<this._loginList.length;i++)this._arrayEmail.push(this._loginList[i]._email),this._arrayPWD.push(this._loginList[i]._pwd)}addLogin(i){this._loginList.push(i),localStorage.setItem("key1",JSON.stringify(this.localStorageEncryption())),this.updateLogin()}localStorageEncryption(){let i=JSON.parse(JSON.stringify([].concat(this._loginList)));for(let t=0;t<this._loginList.length;t++)i[t]._email=simpleEncryption(i[t]._email),i[t]._pwd=simpleEncryption(i[t]._pwd);return i}}